// This file is auto-generated by the Supabase CLI
// This contains TypeScript types for your database tables

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          id: string;
          email: string;
          first_name: string | null;
          last_name: string | null;
          second_name: string | null;
          gender: string | null;
          population_group: string | null;
          high_school_situation: string | null;
          facilities: string[] | null;
          id_certificate: string | null;
          learner_cell_phone: string | null;
          learner_landline: string | null;
          parent_guardian_name: string | null;
          parent_guardian_contact: string | null;
          parent_guardian_landline: string | null;
          who_do_you_live_with: string[] | null;
          household_members: number | null;
          family_members_occupation: string | null;
          original_essay: string | null;
          main_language: string[] | null;
          religious_affiliation: string | null;
          positive_impact: string | null;
          plans_after_school: string | null;
          career_interest: string | null;
          personality_statements: string | null;
          successful_community_member: string | null;
          tips_for_friend: string | null;
          kimberley_challenges: string | null;
          school: string | null;
          grade: string | null;
          role: 'student' | 'coordinator' | 'admin';
          student_number: string | null;
          created_at: string;
          updated_at: string;
          profile_status: string;
          reports: Array<{
            id: string;
            name: string;
            size: string;
            uploadDate: string;
            url: string;
            storage_path: string;
          }> | null;
          reports_count: number | null;
          last_report_upload: string | null;
        };
        Insert: {
          id: string;
          email: string;
          first_name?: string | null;
          last_name?: string | null;
          second_name?: string | null;
          gender?: string | null;
          population_group?: string | null;
          high_school_situation?: string | null;
          facilities?: string[] | null;
          id_certificate?: string | null;
          learner_cell_phone?: string | null;
          learner_landline?: string | null;
          parent_guardian_name?: string | null;
          parent_guardian_contact?: string | null;
          parent_guardian_landline?: string | null;
          who_do_you_live_with?: string[] | null;
          household_members?: number | null;
          family_members_occupation?: string | null;
          original_essay?: string | null;
          main_language?: string[] | null;
          religious_affiliation?: string | null;
          positive_impact?: string | null;
          plans_after_school?: string | null;
          career_interest?: string | null;
          personality_statements?: string | null;
          successful_community_member?: string | null;
          tips_for_friend?: string | null;
          kimberley_challenges?: string | null;
          school?: string | null;
          grade?: string | null;
          role?: 'student' | 'coordinator' | 'admin';
          student_number?: string | null;
          created_at?: string;
          updated_at?: string;
          profile_status?: string;
          reports?: Array<{
            id: string;
            name: string;
            size: string;
            uploadDate: string;
            url: string;
            storage_path: string;
          }> | null;
          reports_count?: number | null;
          last_report_upload?: string | null;
        };
        Update: {
          id?: string;
          email?: string;
          first_name?: string | null;
          last_name?: string | null;
          second_name?: string | null;
          gender?: string | null;
          population_group?: string | null;
          high_school_situation?: string | null;
          facilities?: string[] | null;
          id_certificate?: string | null;
          learner_cell_phone?: string | null;
          learner_landline?: string | null;
          parent_guardian_name?: string | null;
          parent_guardian_contact?: string | null;
          parent_guardian_landline?: string | null;
          who_do_you_live_with?: string[] | null;
          household_members?: number | null;
          family_members_occupation?: string | null;
          original_essay?: string | null;
          main_language?: string[] | null;
          religious_affiliation?: string | null;
          positive_impact?: string | null;
          plans_after_school?: string | null;
          career_interest?: string | null;
          personality_statements?: string | null;
          successful_community_member?: string | null;
          tips_for_friend?: string | null;
          kimberley_challenges?: string | null;
          school?: string | null;
          grade?: string | null;
          role?: 'student' | 'coordinator' | 'admin';
          student_number?: string | null;
          created_at?: string;
          updated_at?: string;
          profile_status?: string;
          reports?: Array<{
            id: string;
            name: string;
            size: string;
            uploadDate: string;
            url: string;
            storage_path: string;
          }> | null;
          reports_count?: number | null;
          last_report_upload?: string | null;
        };
      };
      academic_results: {
        Row: {
          id: string;
          student_id: string;
          subject_name: string;
          level: number;
          final_percentage: number;
          grade_average: number;
          term: number;
          school_id: string | null;
          academic_year: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          student_id: string;
          subject_name: string;
          level: number;
          final_percentage: number;
          grade_average: number;
          term: number;
          school_id?: string | null;
          academic_year: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          student_id?: string;
          subject_name?: string;
          level?: number;
          final_percentage?: number;
          grade_average?: number;
          term?: number;
          school_id?: string | null;
          academic_year?: string;
          created_at?: string;
          updated_at?: string;
        };
      };
      performance_summaries: {
        Row: {
          id: string;
          student_id: string;
          term: number;
          academic_year: string;
          average_score: number;
          performance_status: string;
          school_id: string | null;
          feedback: string | null;
          overall_status: string;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          student_id: string;
          term: number;
          academic_year: string;
          average_score: number;
          performance_status: string;
          school_id?: string | null;
          feedback?: string | null;
          overall_status: string;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          student_id?: string;
          term?: number;
          academic_year?: string;
          average_score?: number;
          performance_status?: string;
          school_id?: string | null;
          feedback?: string | null;
          overall_status: string;
          created_at?: string;
          updated_at?: string;
        };
      };
      performance_breakdowns: {
        Row: {
          id: string;
          performance_summary_id: string;
          category: string;
          subject_name: string;
          level: number | null;
          final_percentage: number | null;
          grade_average: number | null;
          created_at: string;
          updated_at: string;
        };
        Insert: {
          id?: string;
          performance_summary_id: string;
          category: string;
          subject_name: string;
          level?: number | null;
          final_percentage?: number | null;
          grade_average?: number | null;
          created_at?: string;
          updated_at?: string;
        };
        Update: {
          id?: string;
          performance_summary_id?: string;
          category?: string;
          subject_name?: string;
          level?: number | null;
          final_percentage?: number | null;
          grade_average?: number | null;
          created_at?: string;
          updated_at?: string;
        };
      };
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      save_performance_summary_with_breakdowns: {
        Args: {
          p_student_id: string
          p_term: number
          p_academic_year: string
          p_average_score: number
          p_performance_status: string
          p_school_id?: string | null
          p_feedback?: string | null
          p_overall_status?: string | null
          p_breakdowns: Array<{
            category: string
            subjects: Array<{
              subject_name: string
              level: number | null
              final_percentage: number | null
              grade_average: number | null
            }>
          }>
        }
        Returns: {
          success: boolean
          summary_id: string
          message: string
        }
      }
    }
    Enums: {
      user_role: 'student' | 'coordinator' | 'admin';
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

// This type will be used for any table that doesn't have a specific type
export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row'];
export type Enums<T extends keyof Database['public']['Enums']> = Database['public']['Enums'][T];
